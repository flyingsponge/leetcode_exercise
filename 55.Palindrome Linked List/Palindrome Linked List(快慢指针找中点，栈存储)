/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(head==NULL || head->next==NULL)
            return true;
        ListNode* fast=head;
        ListNode* slow=head;
        stack<int> s;
        s.push(head->val);
        while(fast->next && fast->next->next)
        {
            slow=slow->next;
            fast=fast->next->next;
            s.push(slow->val);
        }
        if(!fast->next)
            s.pop();
        while(slow->next)
        {
           if(s.top()==slow->next->val)
           {
               s.pop();
               slow=slow->next;
           }
           else
               return false;
        }
        return true;
    }
};
