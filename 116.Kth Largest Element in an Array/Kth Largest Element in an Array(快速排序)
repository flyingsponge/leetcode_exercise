class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        int left=0,right=nums.size()-1;
        while(true)
        {
            int pos=partition(nums,left,right);
            if(pos==k-1)
                return nums[k-1];
            else if(pos>k-1)
                right=pos-1;
            else
                left=pos+1;
        }
    }
        int partition(vector<int>& nums,int left,int right)
        {
            int r=right,l=left+1;
            int pivot=nums[left];
            while(l<=r)
            {
                if(nums[l]<pivot&&nums[r]>pivot)
                    swap(nums[l++],nums[r--]);
                if(nums[l]>=pivot)
                    l++;
                if(nums[r]<=pivot)
                    r--;
            }
            swap(nums[left],nums[r]);
            return r;
        }
};
