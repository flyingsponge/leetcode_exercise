/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(root==NULL)
            return true;
        else if(root->left==NULL && root->right==NULL)
            return true;
        else if(root->left==NULL || root->right==NULL)
            return false;
        else if(root->left->val != root->right->val)
            return false;
        else
            return isMirror(root->left,root->right);
    }
    
    bool isMirror(TreeNode* left1,TreeNode* right1)
    {
        if(left1==NULL && right1==NULL)
            return true;
        else if(left1==NULL ||right1==NULL || left1->val!=right1->val)
            return false;
        else
            return isMirror(left1->left,right1->right)&&isMirror(left1->right,right1->left);
    }
};
